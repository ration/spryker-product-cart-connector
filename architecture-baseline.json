[
    {
        "fileName": "src/Spryker/Zed/ProductCartConnector/Dependency/Facade/ProductCartConnectorToLocaleBridge.php",
        "description": "Bridges: Method `getCurrentLocale()` must have `public function get<DomainEntity>Collection(<DomainEntity>CriteriaTransfer): <DomainEntity>CollectionTransfer` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductCartConnector/Dependency/Facade/ProductCartConnectorToMessengerFacadeBridge.php",
        "description": "Bridges: Method `addInfoMessage()` must have `public function create<DomainEntity>Collection(<DomainEntity>CollectionRequestTransfer): <DomainEntity>CollectionResponseTransfer` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductCartConnector/Dependency/Facade/ProductCartConnectorToProductBridge.php",
        "description": "Bridges: Type should be defined for param `concreteSku` in method `Spryker\\Zed\\ProductCartConnector\\Dependency\\Facade\\ProductCartConnectorToProductBridge::getProductConcrete()`.",
        "rule": "BridgeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductCartConnector/Dependency/Facade/ProductCartConnectorToProductBridge.php",
        "description": "Bridges: Method `getProductConcrete()` must have `public function get<DomainEntity>Collection(<DomainEntity>CriteriaTransfer): <DomainEntity>CollectionTransfer` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductCartConnector/Dependency/Facade/ProductCartConnectorToProductBridge.php",
        "description": "Bridges: Method `getRawProductConcreteBySku()` must have `public function get<DomainEntity>Collection(<DomainEntity>CriteriaTransfer): <DomainEntity>CollectionTransfer` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductCartConnector/Dependency/Facade/ProductCartConnectorToProductBridge.php",
        "description": "Bridges: Method `getLocalizedProductConcreteName()` must have `public function get<DomainEntity>Collection(<DomainEntity>CriteriaTransfer): <DomainEntity>CollectionTransfer` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductCartConnector/Dependency/Facade/ProductCartConnectorToProductBridge.php",
        "description": "Bridges: Type should be defined for param `sku` in method `Spryker\\Zed\\ProductCartConnector\\Dependency\\Facade\\ProductCartConnectorToProductBridge::hasProductConcrete()`.",
        "rule": "BridgeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductCartConnector/Dependency/Facade/ProductCartConnectorToProductBridge.php",
        "description": "Bridges: Type should be defined for param `sku` in method `Spryker\\Zed\\ProductCartConnector\\Dependency\\Facade\\ProductCartConnectorToProductBridge::hasProductAbstract()`.",
        "rule": "BridgeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductCartConnector/Dependency/Facade/ProductCartConnectorToProductBridge.php",
        "description": "Bridges: Method `getRawProductConcreteTransfersByConcreteSkus()` must have `public function get<DomainEntity>Collection(<DomainEntity>CriteriaTransfer): <DomainEntity>CollectionTransfer` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductCartConnector/Dependency/Facade/ProductCartConnectorToProductBridge.php",
        "description": "Bridges: Method `getProductConcretesByCriteria()` must have `public function get<DomainEntity>Collection(<DomainEntity>CriteriaTransfer): <DomainEntity>CollectionTransfer` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductCartConnector/Dependency/Facade/ProductCartConnectorToProductBridge.php",
        "description": "Bridges: Method `getProductUrls()` must have `public function get<DomainEntity>Collection(<DomainEntity>CriteriaTransfer): <DomainEntity>CollectionTransfer` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductCartConnector/Dependency/Facade/ProductCartConnectorToProductBridge.php",
        "description": "Bridges: Method `getRawProductAbstractTransfersByAbstractSkus()` must have `public function get<DomainEntity>Collection(<DomainEntity>CriteriaTransfer): <DomainEntity>CollectionTransfer` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductCartConnector/Dependency/Facade/ProductCartConnectorToStoreFacadeBridge.php",
        "description": "Bridges: Type should be defined for param `storeName` in method `Spryker\\Zed\\ProductCartConnector\\Dependency\\Facade\\ProductCartConnectorToStoreFacadeBridge::getStoreByName()`.",
        "rule": "BridgeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductCartConnector/Dependency/Facade/ProductCartConnectorToStoreFacadeBridge.php",
        "description": "Bridges: Method `getStoreByName()` must have `public function get<DomainEntity>Collection(<DomainEntity>CriteriaTransfer): <DomainEntity>CollectionTransfer` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    }
]
